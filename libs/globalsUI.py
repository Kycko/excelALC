from   sys import exit as SYSEXIT
import dictFuncs       as dictF
import strings         as S

class globUI(): # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ G.UI (–≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
  def __init__(self):
    def getShared(type:str,upd={}):
      # —Ñ—É–Ω–∫—Ü–∏—è, –ø–µ—Ä–µ–¥–∞—é—â–∞—è –≤ self.build –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      dict = {'inTab'    :{'rules'  :{'final':('packTab')},
                           'type'   : 'fr',
                           'pack'   :{'fill'   :'x'},
                           'packTab':{'padding': 7}}, # —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª–∞ 'packTab'
              'inTaskBtn':{'type'   : 'btn',
                           'cmd'    :{'type' :'inTaskBtn'},
                           'build'  :{'width': 45},
                           'pack'   :{'pady' :  5}}}
      return dictF.update(dict[type],**upd)

    # –±–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    self.app = {'version':'v.159',  'name':'excelALC'}
    self.app   ['title'] = self.app['name']+' '+self.app['version'] # –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞

    # —Å—Ç–∏–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è (—Ç–µ–º—ã, —à—Ä–∏—Ñ—Ç—ã –∏ —Ç.¬†–ø.)
    self.themes = ( 'flatly','superhero')  # —Å–≤–µ—Ç–ª–∞—è/—Ç—ë–º–Ω–∞—è
    self.sizes  = ({'lbl':'100%','size':(1000,600)},
                   {'lbl':'125%','size':(1050,650)},
                   {'lbl':'150%','size':(1100,700)},
                   {'lbl':'175%','size':(1150,750)})
    self.fonts  =  {'iconBig':('Calibri',17)} # —Ç–æ–ª—å–∫–æ –¥–ª—è label'–æ–≤ (–¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—Å—ë —Å–ª–æ–∂–Ω–µ–µ)
    self.icons  =  {'moon':'üåô','sun':'üîÜ'}

    # —Ü–≤–µ—Ç–∞ (—Ä–∞–∑–Ω—ã–µ –¥–ª—è —Å–≤–µ—Ç–ª–æ–π[0] –∏ —Ç—ë–º–Ω–æ–π[1] —Ç–µ–º
    # !–ò–°–ü. G.UI.colors (–æ–Ω –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–µ–º—ã, –≤ appUI.Window.setUItheme())
    self.themeColors = ({'blue'    :'#277CD4',  # ‚Üì —Å–≤–µ—Ç–ª–∞—è
                         'green'   :'#4AAC7F',
                         'magenta' :'#936BCC',
                         'pink'    :'#D22E9E',
                         'red'     :'#DE3923',
                         'lightRed':'#E36B4F',
                         'sand'    :'#D1A63E'},
                        {'blue'    :'#7BBCFF',  # ‚Üì —Ç—ë–º–Ω–∞—è
                         'green'   :'#8EE4BD',
                         'magenta' :'#C4ABE7',
                         'pink'    :'#FBA1DE',
                         'red'     :'#EF6C32',
                         'lightRed':'#E36F47',
                         'sand'    :'#FFE5A7'}) # –∞–Ω–∞–ª–æ–≥ lightYellow

    # –í–°–ï –≤–∏–¥–∂–µ—Ç—ã —Å –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
    self.build = {
      # rules{start:, –æ—Å–æ–±—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –í –ù–ê–ß–ê–õ–ï buildUI()
      #       final:, ‚Äì‚Äì||‚Äì‚Äì         –í –ö–û–ù–¶–ï  buildUI()
      #       other:} ‚Äì‚Äì||‚Äì‚Äì  –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö buildUI(), –ù–£–ñ–ù–û –í–°–¢–†–ê–ò–í–ê–¢–¨ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
      # type  = fr(ame),lfr(labelFrame),cb(checkButton),tt(toolTip),tbs(tabs=TBS.Notebook),...
      # wxKey = –∫–ª—é—á –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–∂–µ—Ç–æ–≤ –≤ –ø–∞–º—è—Ç–∏ (–≤ appUI.Window.wx{})
      # var   = variable –¥–ª—è BooleanVar, –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê –¥–ª—è type = cb
      # cmd   = {type = —Ç–∏–ø –¥–ª—è _bindCmd(), lmb = –¥–ª—è lambda}
      # build = —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
      # pack  = –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–ø–∞–∫–æ–≤–∫–∏ –≤–æ —Ñ—Ä–µ–π–º
      # stash = –≤–∏–¥–∂–µ—Ç—ã, –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –≤ —ç—Ç–æ—Ç (–∏—Å–ø. list[], —Ç.¬†–∫. —Å tuple'–∞–º–∏ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞)
      'init'       :{'rules':{'start':('clean')},
                     'type' : 'fr',
                     'wxKey': 'fRoot',
                     'pack' :{'fill':'both','expand':True,'padx':10,'pady':10},
                     'stash':['inLeft']},
      'inLeft'     :{'type' : 'fr',
                     'pack' :{'fill':'both','side':'left','padx': 7},
                     'stash':['inTabs','inBottom']},
      'inRight'    :{'rules':{'start':('saveProps'),'final':('buildInRight')},
                     'type' : 'lfr',
                     'wxKey': 'fInRight',
                     'pack' :{'fill':'both','side':'right','expand':True,'padx':6}},
      'inTabs'     :{'type' : 'tbs',
                     'pack' :{'fill':'both','expand':True,'pady':7},
                     'stash':['inTabMain','inTabSec']},
      'inTabMain'  :  getShared('inTab',
                               {'inner':{'packTab':{'text':S.UI['inTabMain']}},
                                'root' :{'stash'  :['inBtnChkCat',  # chk = check
                                                    'inBtnChkSrc']}}),
      'inTabSec'   :  getShared('inTab',
                               {'inner':{'packTab':{'text':S.UI['inTabSec']}},
                                'root' :{'stash'  :[]}}),
      'inBtnChkCat':  getShared('inTaskBtn',
                               {'inner':{'cmd'  :{'lmb'      :'checkCat'},
                                         'build':{'text'     : S.UI['tasks']['checkCat']['inBtn'],
                                                  'bootstyle':'primary'}}}),
      'inBtnChkSrc':  getShared('inTaskBtn',
                               {'inner':{'cmd'  :{'lmb'      :'checkSrc'},
                                         'build':{'text'     : S.UI['tasks']['checkSrc']['inBtn'],
                                                  'bootstyle':'primary'}}}),
      'inBottom'   :{'type' : 'fr',
                     'pack' :{'fill':'x','side':'bottom','pady': 5},
                     'stash':['inCfg','btnCloseApp']},
      'inCfg'      :{'type' : 'lfr',
                     'build':{'text':S.UI['inCfg:lfr']},
                     'pack' :{'fill':'x','side':'left'},
                     'stash':['inCfgTheme','btnCfgZoom']},
      'inCfgTheme' :{'type' : 'fr',
                     'pack' :{'pady':3},
                     'stash':['lblSun','lblMoon','cbTheme']},
      'lblSun'     :{'type' : 'lbl',
                     'build':{'text':self.icons['sun'],
                              'font':self.fonts['iconBig']},
                     'pack' :{'side':'left','padx':4}},
      'lblMoon'    :{'type' : 'lbl',
                     'build':{'text':self.icons['moon'],
                              'font':self.fonts['iconBig']},
                     'pack' :{'side':'right','padx':0}},
      'cbTheme'    :{'type' : 'cb',
                     'var'  : 'main:darkTheme',
                     'build':{'bootstyle':'round-toggle'},
                     'pack' :{'expand'   : True},
                     'stash':['ttTheme']},
      'ttTheme'    :{'type' : 'tt',
                     'build':{'text' :S.UI['inCfg:ttTheme']}},
      'btnCfgZoom' :{'rules':{'final':    ('buildZoomBtn')},
                     'type' : 'btn',
                     'wxKey': 'btnCfgZoom',
                     'cmd'  :{'type'     :'UIzoom'},
                     'build':{'bootstyle':'secondary'},
                     'pack' :{'padx':4   ,'pady':4}},
      'btnCloseApp':{'type' : 'btn',
                     'cmd'  :{'type'     :             'closeApp'},
                     'build':{'text'     :S.UI['init:btnCloseApp'],
                              'width'    :  25,
                              'bootstyle':  'danger'},
                     'pack' :{'side':'right','anchor':'s','padx':4,'pady':4}},

      'run'        :{'rules':{'start':('clean')}}
      }

# –∑–∞—â–∏—Ç–∞ –æ—Ç –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—è
if __name__ == '__main__':
  print  ("This is module, please don't execute.")
  SYSEXIT()
