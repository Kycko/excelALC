from   sys import exit as SYSEXIT
import dictFuncs       as dictF
import strings         as S

class globUI(): # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ G.UI (–≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
  def __init__(self):
    def _getShared(type:str,upd={}):
      # —Ñ—É–Ω–∫—Ü–∏—è, –ø–µ—Ä–µ–¥–∞—é—â–∞—è –≤ self.build –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      dict = {'fRoot'     :{'rules'  :{'start':('clean')},
                            'type'   : 'fr',
                            'wxKey'  : 'fRoot',
                            'pack'   :{'fill':'both','expand':True,'padx':10,'pady':10}},
              'ilTab'     :{'rules'  :{'final':('packTab')},
                            'type'   : 'fr',
                            'pack'   :{'fill'   :'both'},
                            'packTab':{'padding': 7}},  # —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª–∞ 'packTab'
              'scrollTab' :{'rules'  :{'final':('packTab')},
                            'type'   : 'sfr', # ScrollFrame
                            'pack'   :{'fill'   :'both'},
                            'packTab':{'padding': 7}},
              'il:taskBtn':{'type'   : 'btn',
                            'cmd'    :{'type' :'il:taskBtn'},
                            'build'  :{'width': 45},
                            'pack'   :{'pady' :  5}},
              'ir:tc:cb'  :{'rules'  :{'start':('mergeTC')},
                            'type'   : 'cb',
                            'build'  :{'bootstyle':'round-toggle'},
                            'pack'   :{'anchor'   :'nw',
                                       'expand'   : True,
                                       'padx'     : 5,
                                       'pady'     : 5}},
              'irFileLbl' :{'type'   : 'lbl',
                            'pack'   :{'anchor':'w','padx':5}},
              'log'       :{'rules'  :{'final':('paramsConfig')},
                            'type'   : 'lbl',
                            'pack'   :{'fill':'x'}}}
      return dictF.update(dict[type],**upd)

    # –±–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    self.app = {'version':'v.159',  'name':'excelALC'}
    self.app   ['title'] = self.app['name']+' '+self.app['version'] # –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞

    # —Å—Ç–∏–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è (—Ç–µ–º—ã, —à—Ä–∏—Ñ—Ç—ã –∏ —Ç.¬†–ø.)
    self.themes = ( 'flatly','superhero')  # —Å–≤–µ—Ç–ª–∞—è/—Ç—ë–º–Ω–∞—è
    self.sizes  = ({'lbl':'100%','size':(1000,600)},
                   {'lbl':'125%','size':(1050,650)},
                   {'lbl':'150%','size':(1100,700)},
                   {'lbl':'175%','size':(1150,750)})
    self.fonts  =  {'iconBig':('Calibri',17)} # —Ç–æ–ª—å–∫–æ –¥–ª—è label'–æ–≤ (–¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—Å—ë —Å–ª–æ–∂–Ω–µ–µ)
    self.icons  =  {'moon':'üåô','sun':'üîÜ'}

    # —Ü–≤–µ—Ç–∞ (—Ä–∞–∑–Ω—ã–µ –¥–ª—è —Å–≤–µ—Ç–ª–æ–π[0] –∏ —Ç—ë–º–Ω–æ–π[1] —Ç–µ–º
    # !–ò–°–ü. G.UI.colors (–æ–Ω –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–µ–º—ã, –≤ appUI.Window.setUItheme())
    self.themeColors = ({'blue'    :'#277CD4',  # ‚Üì —Å–≤–µ—Ç–ª–∞—è
                         'green'   :'#4AAC7F',
                         'magenta' :'#936BCC',
                         'pink'    :'#D22E9E',
                         'red'     :'#DE3923',
                         'lightRed':'#E36B4F',
                         'sand'    :'#D1A63E'},
                        {'blue'    :'#7BBCFF',  # ‚Üì —Ç—ë–º–Ω–∞—è
                         'green'   :'#8EE4BD',
                         'magenta' :'#C4ABE7',
                         'pink'    :'#FBA1DE',
                         'red'     :'#EF6C32',
                         'lightRed':'#E36F47',
                         'sand'    :'#FFE5A7'}) # –∞–Ω–∞–ª–æ–≥ lightYellow

    # –í–°–ï –≤–∏–¥–∂–µ—Ç—ã —Å –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
    self.build = {
      # rules{start:, –æ—Å–æ–±—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –í –ù–ê–ß–ê–õ–ï buildUI()
      #       final:, ‚Äì‚Äì||‚Äì‚Äì         –í –ö–û–ù–¶–ï  buildUI()
      #       other:} ‚Äì‚Äì||‚Äì‚Äì  –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö buildUI(), –ù–£–ñ–ù–û –í–°–¢–†–ê–ò–í–ê–¢–¨ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
      # type     = fr(ame),lfr(labelFrame),cb(checkButton),tt(toolTip),tbs(tabs=TBS.Notebook),...
      # wxKey    = –∫–ª—é—á –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–∂–µ—Ç–æ–≤ –≤ –ø–∞–º—è—Ç–∏ (–≤ appUI.Window.wx{})
      # var/tVar = variable –¥–ª—è BooleanVar, –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê –¥–ª—è type = cb
      # cmd      = {type = —Ç–∏–ø –¥–ª—è _bindCmd(), lmb = –¥–ª—è lambda}
      # build    = —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
      # pack     = –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–ø–∞–∫–æ–≤–∫–∏ –≤–æ —Ñ—Ä–µ–π–º
      # stash    = –≤–∏–¥–∂–µ—Ç—ã, –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –≤ —ç—Ç–æ—Ç (–∏—Å–ø. list[], —Ç.¬†–∫. —Å tuple'–∞–º–∏ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞)

      # il,ir = initLeft,initRight
      # tc = task cfg
      # rl,rr,re,rb = runLog,runRight:[runErrors,runButtons]
      'init'           : _getShared('fRoot',{'root':{'stash':['il']}}),
      'il'             :{'type' : 'fr',
                         'pack' :{'fill':'both','side':'left','padx': 7},
                         'stash':['ilTabs','ilBottom']},
      'ilTabs'         :{'type' : 'tbs',
                         'pack' :{'fill':'both','expand':True,'pady':7},
                         'stash':['ilTabMain','ilTabSec']},
      'ilTabMain'      : _getShared('ilTab',
                                   {'inner':{'packTab':{'text':S.UI['ilTabMain']}},
                                    'root' :{'stash'  :['il:chkCat',  # chk = check
                                                        'il:chkSrc']}}),
      'ilTabSec'       : _getShared('ilTab',
                                   {'inner':{'packTab':{'text':S.UI['ilTabSec']}},
                                    'root' :{'stash'  :[]}}),
      'il:chkCat'      : _getShared('il:taskBtn',
                                   {'inner':{'cmd'  :{'lmb'      :'chkCat'},
                                             'build':{'text'     : S.UI['tasks']['chkCat']['ilBtn'],
                                                      'bootstyle':'primary'}}}),
      'il:chkSrc'      : _getShared('il:taskBtn',
                                   {'inner':{'cmd'  :{'lmb'      :'chkSrc'},
                                             'build':{'text'     : S.UI['tasks']['chkSrc']['ilBtn'],
                                                      'bootstyle':'primary'}}}),
      'ilBottom'       :{'type' : 'fr',
                         'pack' :{'fill':'x','side':'bottom','pady': 5},
                         'stash':['ilCfg','il:closeApp']},
      'ilCfg'          :{'type' : 'lfr',
                         'build':{'text':S.UI['ilCfg:lfr']},
                         'pack' :{'fill':'x','side':'left'},
                         'stash':['il:cfgTheme','il:cfgZoom']},
      'il:cfgTheme'    :{'type' : 'fr',
                         'pack' :{'pady':3},
                         'stash':['il:lblSun','il:lblMoon','il:cbTheme']},
      'il:lblSun'      :{'type' : 'lbl',
                         'build':{'text':self.icons['sun'],
                                  'font':self.fonts['iconBig']},
                         'pack' :{'side':'left','padx':4}},
      'il:lblMoon'     :{'type' : 'lbl',
                         'build':{'text':self.icons['moon'],
                                  'font':self.fonts['iconBig']},
                         'pack' :{'side':'right','padx':0}},
      'il:cbTheme'     :{'type' : 'cb',
                         'var'  : 'main:darkTheme',
                         'build':{'bootstyle':'round-toggle'},
                         'pack' :{'expand'   : True},
                         'stash':['il:ttTheme']},
      'il:ttTheme'     :{'type' : 'tt',
                         'build':{'text' :S.UI['ilCfg:ttTheme']}},
      'il:cfgZoom'     :{'rules':{'final':    ('build:zoomBtn')},
                         'type' : 'btn',
                         'wxKey': 'cfgZoom',
                         'cmd'  :{'type'     :'UIzoom'},
                         'build':{'bootstyle':'secondary'},
                         'pack' :{'padx':4   ,'pady':4}},
      'il:closeApp'    :{'type' : 'btn',
                         'cmd'  :{'type'     :        'closeApp'},
                         'build':{'text'     :S.UI['il:closeApp'],
                                  'width'    :  25,
                                  'bootstyle':  'danger'},
                         'pack' :{'side':'right','anchor':'s','padx':4,'pady':4}},

      'ir'             :{'rules':{'start':('saveProps'),'final':('build:ir')},
                         'type' : 'lfr',
                         'wxKey': 'ir',
                         'pack' :{'fill':'both','side':'right','expand':True,'padx':6},
                         'stash':['irDesc','irCfg','irBottom']},
      'irDesc'         :{'type' : 'lbl',
                         'wxKey': 'irDesc',
                         'build':{'wraplength':620},
                         'pack' :{'fill':'x','padx':8,'pady':5}},
      'irCfg'          :{'rules':{'final':('build:irCfg')},
                         'type' : 'fr',
                         'pack' :{'fill':'x','anchor':'nw','padx':8},
                         'stash':['irSep']},
      'irSep'          :{'type' : 'sep',
                         'pack' :{'fill':'x','padx':2,'pady':6}},
      'irBottom'       :{'rules':{'final':('build:irBottom')},
                         'type' : 'fr',
                         'pack' :{'fill':'x','side':'bottom','padx':22},
                         'stash':['ir:launchBtn','irFile']},
      'irFile'         :{'type' : 'fr',
                         'pack' :{'side':'left'},
                         'stash':['irFile:desc','irFile:upd']},
      'irFile:desc'    :{'type' : 'fr',
                         'pack' :{'side':'right'},
                         'stash':['irFile:file','irFile:sheet']},
      'irFile:file'    : _getShared('irFileLbl',{'root':{'wxKey':'irFile:file' }}),
      'irFile:sheet'   : _getShared('irFileLbl',{'root':{'wxKey':'irFile:sheet'}}),
      'irFile:upd'     :{'type' : 'btn',
                         'cmd'  :{'type'     :      'irFile:upd'},
                         'build':{'text'     : S.UI['irFile:upd'], # –Ω–æ—Ä–º. –∏–∫–æ–Ω–∫—É –≤ –∫–æ–Ω–ø–∫–µ –Ω–µ —Å–¥–µ–ª–∞—Ç—å
                                  'bootstyle':'secondary'},
                         'pack' :{'side'     :'right',
                                  'fill'     :'both'}},
      'ir:launchBtn'   :{'type' : 'btn',
                         'wxKey': 'ir:launchBtn',
                         'cmd'  :{'type':'ir:launchBtn'},
                         'build':{'bootstyle':'success'},
                         'pack' :{'fill':'x','side':'bottom','pady':12}},

      'tc:newSheet'    : _getShared('ir:tc:cb',{'root':{'tVar':'newSheet'}}), # tVar = task var
      'tc:suggErrors'  : _getShared('ir:tc:cb',{'root':{'tVar':'suggErrors'}}),
      'tc:confirmWrite': _getShared('ir:tc:cb',{'root':{'tVar':'confirmWrite'}}),
      'tc:saveAfter'   : _getShared('ir:tc:cb',{'root':{'tVar':'saveAfter'}}),

      'run'            : _getShared('fRoot',{'root':{'stash':['rl','rr']}}),
      'rl'             :{'type' : 'fr',
                         'pack' :{'fill':'both','expand':True,'side':'left'},
                         'stash':['rlLbl','rlTabs']},
      'rr'             :{'type' : 'fr',
                         'pack' :{'fill':'both','expand':True,'side':'right','padx':5},
                         'stash':['rb','re']},
      'rlLbl'          :{'type' : 'lbl',
                         'build':{'text':S.UI['rl:lbl']},
                         'pack' :{'anchor':'w','padx':10}},
      'rlTabs'         :{'type' : 'tbs',
                         'pack' :{'fill':'both','expand':True,'padx':5,'pady':7},
                         'stash':['rlTabMain','rlTabErrors']},
      'rlTabMain'      : _getShared('scrollTab',
                                   {'inner':{'packTab':{'text':S.UI['rl:main']}},
                                    'root' :{'wxKey'  : 'rl:main'}}),
      'rlTabErrors'    : _getShared('scrollTab',
                                   {'inner':{'packTab':{'text':S.UI['rl:errors']}},
                                    'root' :{'wxKey'  : 'rl:errors'}}),
      'rb'             :{'type' : 'lfr',
                         'wxKey': 'rbLfr',
                         'build':{'text':S.UI['rb:init']},
                         'pack' :{'fill':'both','expand':True},
                         'stash':['rbRoot']},
      'rbRoot'         :{'type' : 'fr',
                         'wxKey': 'rbRoot',
                         'pack' :{'fill':'both','expand':True},
                         'stash':['rbe:cur']}, # e –≤ rbe = errors (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫)
      'rbe:cur'        :{'type' : 'fr',
                         'pack' :{'fill':'x','side':'top','padx':10,'pady':5},
                         'stash':['rbe:curLbl']},
      'rbe:curLbl'     :{'type' : 'lbl',
                         'build':{'text':S.UI['rbe:curLbl']},
                         'pack' :{'side':'left'}},
      're'             :{'type' : 'lfr',
                         'wxKey': 'errQueue',
                         'build':{'text' : S.UI['re:lfr']},
                         'pack' :{'fill' :'both','expand':True,'pady':7}},
      're:entry'       : _getShared('log',{'root':{'rules':{'final':('paramsConfig',
                                                                     'returnWidget')}}}),

      'log'            : _getShared('log'),
      }

    # —Ü–≤–µ—Ç–∞ –∂—É—Ä–Ω–∞–ª–∞ (–≤—ã–±–∏—Ä–∞—é—Ç—Å—è –ø–æ —é–Ω–∏—Ç—É)
    self.log = {'core'      : None,
                'autocorr'  :'sand',
                'capitalize':'sand',
                'errors'    :'red',
                'rmRC'      :'pink',
                'warning'   :'red',
                'sugg'      :'magenta',
                'titles'    :'blue',
                'finalWrite':'green'}

# –∑–∞—â–∏—Ç–∞ –æ—Ç –∑–∞–ø—É—Å–∫–∞ –º–æ–¥—É–ª—è
if __name__ == '__main__':
  print  ("This is module, please don't execute.")
  SYSEXIT()
